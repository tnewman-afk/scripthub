local HWIDTableWhitelist = loadstring(game:HttpGet("https://raw.githubusercontent.com/drake-1234/Whitelisted/main/Whitelisted"))()
local HWID = game:GetService("RbxAnalyticsService"):GetClientId()
for i,v in pairs(HWIDTableWhitelist) do
if v == HWID then
	print("Whitelisted enjoy!")
end
end
local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/xHeptc/Kavo-UI-Library/main/source.lua"))()
local Window = Library.CreateLib("BY DRAKEY, "Ocean")
local Teams = Window:NewTab("Teams")
local Shop = Window:NewTab("Shop")
local Custom = Window:NewTab("Custom Spells")
local Custom1 = Window:NewTab("Custom Keybinds")
local Custom2 = Window:NewTab("Custom Personal")
local Custom3 = Window:NewTab("Custom Self")
local Other = Window:NewTab("Other")
local Teleports = Window:NewTab("Teleports")
local Misc = Window:NewTab("Misc")
local T = Teams:NewSection("Team Switch")
T:NewButton("Mortal", "Becomes Mortal", function()
-- mortal
local args = {
[1] = BrickColor.new(311)
}

game:GetService("ReplicatedStorage").Remotes.ChangeTeam:FireServer(unpack(args))

end)
T:NewButton("Warlock/Weak Witch", "Becomes Warlock/Weak Witch", function()
-- weak witch
local args = {
[1] = BrickColor.new(307)
}

game:GetService("ReplicatedStorage").Remotes.ChangeTeam:FireServer(unpack(args))
end)
T:NewButton("Pagan  Witch", "Becomes Pagan  Witch", function()
-- pagan  witch
local args = {
[1] = BrickColor.new(107)
}

game:GetService("ReplicatedStorage").Remotes.ChangeTeam:FireServer(unpack(args))
end)
T:NewButton("Fairy", "Becomes Fairy", function()
-- fairy
local args = {
[1] = BrickColor.new(309)
}

game:GetService("ReplicatedStorage").Remotes.ChangeTeam:FireServer(unpack(args))
end)
T:NewButton("Hex Witch", "Becomes Hex Witch", function()
-- hex
local args = {
[1] = BrickColor.new(331)
}

game:GetService("ReplicatedStorage").Remotes.ChangeTeam:FireServer(unpack(args))
end)
T:NewButton("Angel", "Becomes Angel", function()
-- angel
local args = {
[1] = BrickColor.new(226)
}

game:GetService("ReplicatedStorage").Remotes.ChangeTeam:FireServer(unpack(args))
end)
T:NewButton("Fallen Angel", "Becomes Fallen Angel", function()
-- fallen angel
local args = {
[1] = BrickColor.new(26)
}

game:GetService("ReplicatedStorage").Remotes.ChangeTeam:FireServer(unpack(args))
end)
local S = Shop:NewSection("Purchase")
local S = Shop:NewSection("MUST HAVE COINS")
S:NewButton("Greater Health Potion", "Heal", function()

local args = {
[1] = "Greater Health Potion"
}

game:GetService("ReplicatedStorage").Remotes.BuyItem:FireServer(unpack(args))
end)

S:NewButton("Size Potion", "Decrease your size", function()

local args = {
[1] = "Size Potion"
}

game:GetService("ReplicatedStorage").Remotes.BuyItem:FireServer(unpack(args))

print("Clicked")
end)

S:NewButton("Swiftness Potion", "Run Fast", function()

local args = {
[1] = "Swiftness Potion"
}

game:GetService("ReplicatedStorage").Remotes.BuyItem:FireServer(unpack(args))

print("Clicked")
end)

S:NewButton("Regeneration Potion", "Heal", function()

local args = {
[1] = "Regeneration Potion"
}

game:GetService("ReplicatedStorage").Remotes.BuyItem:FireServer(unpack(args))

print("Clicked")
end)

S:NewButton("Health Potion", "Heal", function()

local args = {
[1] = "Health Potion"
}

game:GetService("ReplicatedStorage").Remotes.BuyItem:FireServer(unpack(args))

print("Clicked")
end)

S:NewButton("Buy Mind Stone", "Purchases mindstone (3000 coins)", function()
print("Clicked")
local args = {
[1] = "Bought Mind Stone"
}

game:GetService("ReplicatedStorage").Remotes.BuyItem:FireServer(unpack(args))
end)

S:NewButton("Buy Celestial Stone", "Purhcases celestial stone (18720 coins)", function()
print("Clicked")
local args = {
[1] = "Celestial Stone"
}

game:GetService("ReplicatedStorage").Remotes.BuyItem:FireServer(unpack(args))
end)

S:NewButton("Buy Dimensional Shards", "Purchases Dimensional Shards (3500 coins)", function()
print("Clicked")
local args = {
[1] = "Dimensional Shards"
}

game:GetService("ReplicatedStorage").Remotes.BuyItem:FireServer(unpack(args))
end)

S:NewButton("Buy Nature Scroll", "Purchases nature scroll (500 coins)", function()
print("Clicked")
local args = {
[1] = "Nature Scroll"
}

game:GetService("ReplicatedStorage").Remotes.BuyItem:FireServer(unpack(args))
end)

S:NewButton("Buy Angelic Scroll", "Purchases angletic scroll (777 coins)", function()
print("Clicked")
local args = {
[1] = "Angelic Scroll"
}

game:GetService("ReplicatedStorage").Remotes.BuyItem:FireServer(unpack(args))
end)

S:NewButton("Buy Magic Scroll", "Purchases magic scroll (325 coins)", function()
print("Clicked")
local args = {
[1] = "Magic Scroll"
}

game:GetService("ReplicatedStorage").Remotes.BuyItem:FireServer(unpack(args))
end)

S:NewButton("Buy Magic Candle", "Purchases magic candle (40000 coins)", function()
print("Clicked")
local args = {
[1] = "Magic Candle"
}

game:GetService("ReplicatedStorage").Remotes.BuyItem:FireServer(unpack(args))
end)
S:NewButton("Buy Mind + Celestial Stone", "Purchases mind & celestial stone (21720 coins)", function()
-- purchase mind + celestial stone at once must have the coins
local args = {
[1] = "Celestial Stone"
}

game:GetService("ReplicatedStorage").Remotes.BuyItem:FireServer(unpack(args))
wait()
local args = {
[1] = "Bought Mind Stone"
}

game:GetService("ReplicatedStorage").Remotes.BuyItem:FireServer(unpack(args))
end)
local SE = Shop:NewSection("Selling")
local SE = Shop:NewSection("MUST HAVE ITEM")
SE:NewButton("Sell Apple", "WORTH 1 COIN", function()
    local args = {
        [1] = "Apple"
    }
    
    game:GetService("ReplicatedStorage").Remotes.SellItem:FireServer(unpack(args))
    
end)
SE:NewButton("Sell Golden Apple", "WORTH 10 COINS", function()
    local args = {
        [1] = "Golden Apple"
    }
    
    game:GetService("ReplicatedStorage").Remotes.SellItem:FireServer(unpack(args))
    
end)
SE:NewButton("Sell Health Potion", "WORTH 10 COINS", function()
    local args = {
        [1] = "Health Potion"
    }
    
    game:GetService("ReplicatedStorage").Remotes.SellItem:FireServer(unpack(args))
    
end)
SE:NewButton("Sell Swiftness Potion", "WORTH 10 COINS", function()
    local args = {
        [1] = "Swiftness Potion"
    }
    
    game:GetService("ReplicatedStorage").Remotes.SellItem:FireServer(unpack(args))
    
end)
SE:NewButton("Sell Jump Boost Potion", "WORTH 10 COINS", function()
    local args = {
        [1] = "Jump Boost Potion"
    }
    
    game:GetService("ReplicatedStorage").Remotes.SellItem:FireServer(unpack(args))
    
end)
SE:NewButton("Sell Regeneration Potion", "WORTH 15 COINS", function()
    local args = {
        [1] = "Regeneration Potion"
    }
    
    game:GetService("ReplicatedStorage").Remotes.SellItem:FireServer(unpack(args))
    
end)
SE:NewButton("Sell Greater Health Potion", "WORTH 20 COINS", function()
    local args = {
        [1] = "Greater Health Potion"
    }
    
    game:GetService("ReplicatedStorage").Remotes.SellItem:FireServer(unpack(args))
    
end)
SE:NewButton("Sell Spawned Mind Stone", "WORTH 500 COINS", function()
    local args = {
        [1] = "Mind Stone"
    }
    
    game:GetService("ReplicatedStorage").Remotes.SellItem:FireServer(unpack(args))
    
end)
SE:NewButton("Sell Forbidden Fruit", "WORTH 650 COINS", function()
    local args = {
        [1] = "Forbidden Fruit"
    }
    
    game:GetService("ReplicatedStorage").Remotes.SellItem:FireServer(unpack(args))
    
end)
SE:NewButton("Sell Spawned Celestial Stone", "WORTH 6500 COINS", function()
    local args = {
        [1] = "Spawnt Celestial Stone"
    }
    
    game:GetService("ReplicatedStorage").Remotes.SellItem:FireServer(unpack(args))
    
end)

local O = Other:NewSection("MISC")
O:NewButton("Trap Void", "Traps the void", function()
    game:GetService("ReplicatedStorage").TrapVoid:FireServer()
end)
O:NewButton("Change Moon", "Changes moon", function()
-- moon change
game:GetService("ReplicatedStorage").MoonChange:FireServer()
end)
O:NewButton("Get Horns", "ALSO INCREASES MAGIC", function()
-- increase magic
game:GetService("ReplicatedStorage").SpiritFused:FireServer()
end)
O:NewButton("Burn Angel Wing", "ANGEL ONLY", function()
    game:GetService("ReplicatedStorage").BurnAngelWing:FireServer()
end)
O:NewButton("100m Coins", "give 999billion coins per click", function()
    local args = {
    [1] = 100000000
    }
    game:GetService("ReplicatedStorage").Remotes.GiveCurrency:FireServer(unpack(args))
    end)
local TP = Teleports:NewSection("Teleports")
TP:NewButton("Void Portal Enter", "Teleports to void", function()
-- void portal
game:GetService("ReplicatedStorage").TheVoidPor:FireServer()
end)
TP:NewButton("Enter Heaven", "Teleports to heaven", function()
-- enter heaven
game:GetService("ReplicatedStorage").ToHeaven:FireServer()
end)
TP:NewButton("Exit Heaven", "Teleports out of heaven", function()
-- leave heaven
game:GetService("ReplicatedStorage").OutHeaven:FireServer()
end)
TP:NewButton("To Church Of Night", "Teleports to curch of night", function()
-- to con no flames
game:GetService("ReplicatedStorage").Teleport1:FireServer()
end)
TP:NewButton("To Circle", "Teleports to circle", function()
-- to circle no flames
game:GetService("ReplicatedStorage").Teleport2:FireServer()
end)
local C = Custom:NewSection("Mass spells")
local CC = Custom:NewSection("Mass spells")
local CCC = Custom:NewSection("Mass KEYBINDS")
C:NewButton("Mass Hellfire", "Hellfires whole map (besides immune)", function()

    -- Script generated by SimpleSpy - credits to exx#9394

local args = {
    [1] = "I AM THE DARK LORD'S SWORD!",
    [2] = "All"
}

game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(unpack(args))
    -- Script generated by ClaudiaSpy - credits to ClaudiaHOTM#2452
    local Plr = game.Players.LocalPlayer
    for i, Player in pairs(game.Players:GetPlayers()) do

        if Player.Character ~= nil and Player ~= Plr then
            local mag = (Player.Character.UpperTorso.Position - Plr.Character.UpperTorso.Position).magnitude
            if mag < 10000 then
                local Target = Player.Character or Player.CharacterAdded:Wait()

 -- Script generated by SimpleSpy - credits to exx#9394

 local args = {
    [1] = Target.HitPart
}

game:GetService("ReplicatedStorage").HellFire2:FireServer(unpack(args))

            end
        end
    end

end)
CC:NewButton("Mass Hellfire (No words)", "Hellfires whole map (besides immune)", function()

    -- Script generated by ClaudiaSpy - credits to ClaudiaHOTM#2452
    local Plr = game.Players.LocalPlayer
    for i, Player in pairs(game.Players:GetPlayers()) do

        if Player.Character ~= nil and Player ~= Plr then
            local mag = (Player.Character.UpperTorso.Position - Plr.Character.UpperTorso.Position).magnitude
            if mag < 10000 then
                local Target = Player.Character or Player.CharacterAdded:Wait()

 -- Script generated by SimpleSpy - credits to exx#9394

 local args = {
    [1] = Target.HitPart
}

game:GetService("ReplicatedStorage").HellFire2:FireServer(unpack(args))

            end
        end
    end

end)
C:NewButton("Mass Soulfire", "Soulflames whole map (besides immune)", function()

    -- Script generated by SimpleSpy - credits to exx#9394

local args = {
    [1] = "HELLBOUND SOULFLAME RISE!",
    [2] = "All"
}

game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(unpack(args))

    -- Script generated by ClaudiaSpy - credits to ClaudiaHOTM#2452
    local Plr = game.Players.LocalPlayer
    for i, Player in pairs(game.Players:GetPlayers()) do

        if Player.Character ~= nil and Player ~= Plr then
            local mag = (Player.Character.UpperTorso.Position - Plr.Character.UpperTorso.Position).magnitude
            if mag < 10000 then
                local Target = Player.Character or Player.CharacterAdded:Wait()


               -- Script generated by SimpleSpy - credits to exx#9394

local args = {
    [1] = Target.HitPart
}

game:GetService("ReplicatedStorage").SoulFire:FireServer(unpack(args))


            end
        end
    end

end)
CC:NewButton("Mass Soulfire (No words)", "Soulflames whole map (besides immune)", function()


    -- Script generated by ClaudiaSpy - credits to ClaudiaHOTM#2452
    local Plr = game.Players.LocalPlayer
    for i, Player in pairs(game.Players:GetPlayers()) do

        if Player.Character ~= nil and Player ~= Plr then
            local mag = (Player.Character.UpperTorso.Position - Plr.Character.UpperTorso.Position).magnitude
            if mag < 10000 then
                local Target = Player.Character or Player.CharacterAdded:Wait()


               -- Script generated by SimpleSpy - credits to exx#9394

local args = {
    [1] = Target.HitPart
}

game:GetService("ReplicatedStorage").SoulFire:FireServer(unpack(args))


            end
        end
    end

end)
C:NewButton("Mass Holy Fire", "Holyfires whole map (besides immune)", function()

    -- Script generated by SimpleSpy - credits to exx#9394

local args = {
    [1] = "With the power of light, I banish the darkness from you all.",
    [2] = "All"
}

game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(unpack(args))

    -- Script generated by ClaudiaSpy - credits to ClaudiaHOTM#2452
    local Plr = game.Players.LocalPlayer
    for i, Player in pairs(game.Players:GetPlayers()) do

        if Player.Character ~= nil and Player ~= Plr then
            local mag = (Player.Character.UpperTorso.Position - Plr.Character.UpperTorso.Position).magnitude
            if mag < 10000 then
                local Target = Player.Character or Player.CharacterAdded:Wait()


              -- Script generated by SimpleSpy - credits to exx#9394

local args = {
    [1] = Target.HitPart
}

game:GetService("ReplicatedStorage").HellFire3:FireServer(unpack(args))



            end
        end
    end

end)
CC:NewButton("Mass Holy Fire (No words)", "Holyfires whole map (besides immune)", function()


    -- Script generated by ClaudiaSpy - credits to ClaudiaHOTM#2452
    local Plr = game.Players.LocalPlayer
    for i, Player in pairs(game.Players:GetPlayers()) do

        if Player.Character ~= nil and Player ~= Plr then
            local mag = (Player.Character.UpperTorso.Position - Plr.Character.UpperTorso.Position).magnitude
            if mag < 10000 then
                local Target = Player.Character or Player.CharacterAdded:Wait()


              -- Script generated by SimpleSpy - credits to exx#9394

local args = {
    [1] = Target.HitPart
}

game:GetService("ReplicatedStorage").HellFire3:FireServer(unpack(args))



            end
        end
    end

end)
C:NewButton("Mass Ignis", "Ignis whole map (besides immune)", function()

    -- Script generated by SimpleSpy - credits to exx#9394

local args = {
    [1] = "Make them see, what cannot be, Flames that leap to make them flee.",
    [2] = "All"
}

game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(unpack(args))

    -- Script generated by ClaudiaSpy - credits to ClaudiaHOTM#2452
    local Plr = game.Players.LocalPlayer
    for i, Player in pairs(game.Players:GetPlayers()) do

        if Player.Character ~= nil and Player ~= Plr then
            local mag = (Player.Character.UpperTorso.Position - Plr.Character.UpperTorso.Position).magnitude
            if mag < 10000 then
                local Target = Player.Character or Player.CharacterAdded:Wait()


               -- Script generated by SimpleSpy - credits to exx#9394

local args = {
    [1] = Target.HitPart
}

game:GetService("ReplicatedStorage").HellFire:FireServer(unpack(args))


            end
        end
    end

end)
CC:NewButton("Mass Ignis (No words)", "Ignis whole map (besides immune)", function()


    -- Script generated by ClaudiaSpy - credits to ClaudiaHOTM#2452
    local Plr = game.Players.LocalPlayer
    for i, Player in pairs(game.Players:GetPlayers()) do

        if Player.Character ~= nil and Player ~= Plr then
            local mag = (Player.Character.UpperTorso.Position - Plr.Character.UpperTorso.Position).magnitude
            if mag < 10000 then
                local Target = Player.Character or Player.CharacterAdded:Wait()


               -- Script generated by SimpleSpy - credits to exx#9394

local args = {
    [1] = Target.HitPart
}

game:GetService("ReplicatedStorage").HellFire:FireServer(unpack(args))


            end
        end
    end

end)
C:NewButton("Mass Freeze", "Freezes whole map (besides immune)", function()
local args = {
    [1] = "Let them all, quick as a sneeze. Stop this snit, and quickly freeze.",
    [2] = "All"
}

game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(unpack(args))
    -- Script generated by ClaudiaSpy - credits to ClaudiaHOTM#2452
    local Plr = game.Players.LocalPlayer
    for i, Player in pairs(game.Players:GetPlayers()) do

        if Player.Character ~= nil and Player ~= Plr then
            local mag = (Player.Character.UpperTorso.Position - Plr.Character.UpperTorso.Position).magnitude
            if mag < 10000 then
                local Target = Player.Character or Player.CharacterAdded:Wait()


               -- Script generated by SimpleSpy - credits to exx#9394

local args = {
    [1] = Target.HitPart
}

game:GetService("ReplicatedStorage").FreezeFire:FireServer(unpack(args))


            end
        end
    end

end)
CC:NewButton("Mass Freeze (No words)", "Freezes whole map (besides immune)", function()
 
        -- Script generated by ClaudiaSpy - credits to ClaudiaHOTM#2452
        local Plr = game.Players.LocalPlayer
        for i, Player in pairs(game.Players:GetPlayers()) do
    
            if Player.Character ~= nil and Player ~= Plr then
                local mag = (Player.Character.UpperTorso.Position - Plr.Character.UpperTorso.Position).magnitude
                if mag < 10000 then
                    local Target = Player.Character or Player.CharacterAdded:Wait()
    
    
                   -- Script generated by SimpleSpy - credits to exx#9394
    
    local args = {
        [1] = Target.HitPart
    }
    
    game:GetService("ReplicatedStorage").FreezeFire:FireServer(unpack(args))
    
    
                end
            end
        end
    
    end)
C:NewButton("Mass Vine Trap", "Vine traps whole map (besides immune)", function()

    -- Script generated by SimpleSpy - credits to exx#9394

local args = {
    [1] = "I SUMMON NATURE TO HOLD YOU ALL!",
    [2] = "All"
}

game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(unpack(args))

    -- Script generated by ClaudiaSpy - credits to ClaudiaHOTM#2452
    local Plr = game.Players.LocalPlayer
    for i, Player in pairs(game.Players:GetPlayers()) do

        if Player.Character ~= nil and Player ~= Plr then
            local mag = (Player.Character.UpperTorso.Position - Plr.Character.UpperTorso.Position).magnitude
            if mag < 10000 then
                local Target = Player.Character or Player.CharacterAdded:Wait()


               -- Script generated by SimpleSpy - credits to exx#9394

local args = {
    [1] = Target.HitPart
}

game:GetService("ReplicatedStorage").VineTrap:FireServer(unpack(args))


            end
        end
    end

end)
CC:NewButton("Mass Vine Trap (No words)", "Vine traps whole map (besides immune)", function()


    -- Script generated by ClaudiaSpy - credits to ClaudiaHOTM#2452
    local Plr = game.Players.LocalPlayer
    for i, Player in pairs(game.Players:GetPlayers()) do

        if Player.Character ~= nil and Player ~= Plr then
            local mag = (Player.Character.UpperTorso.Position - Plr.Character.UpperTorso.Position).magnitude
            if mag < 10000 then
                local Target = Player.Character or Player.CharacterAdded:Wait()


               -- Script generated by SimpleSpy - credits to exx#9394

local args = {
    [1] = Target.HitPart
}

game:GetService("ReplicatedStorage").VineTrap:FireServer(unpack(args))


            end
        end
    end

end)
C:NewButton("Holy Heal All", "Heals whole map (besides immune)", function()

    -- Script generated by SimpleSpy - credits to exx#9394

local args = {
    [1] = "You all are just pathetic. Let me heal you, Just this once.",
    [2] = "All"
}

game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(unpack(args))

    -- Script generated by ClaudiaSpy - credits to ClaudiaHOTM#2452
    local Plr = game.Players.LocalPlayer
    for i, Player in pairs(game.Players:GetPlayers()) do

        if Player.Character ~= nil and Player ~= Plr then
            local mag = (Player.Character.UpperTorso.Position - Plr.Character.UpperTorso.Position).magnitude
            if mag < 10000 then
                local Target = Player.Character or Player.CharacterAdded:Wait()


               -- Script generated by SimpleSpy - credits to exx#9394

local args = {
    [1] = Target.HitPart
}

game:GetService("ReplicatedStorage").HealFire2:FireServer(unpack(args))


            end
        end
    end

end)
CC:NewButton("Holy Heal All (No words)", "Heals whole map (besides immune)", function()


    -- Script generated by ClaudiaSpy - credits to ClaudiaHOTM#2452
    local Plr = game.Players.LocalPlayer
    for i, Player in pairs(game.Players:GetPlayers()) do

        if Player.Character ~= nil and Player ~= Plr then
            local mag = (Player.Character.UpperTorso.Position - Plr.Character.UpperTorso.Position).magnitude
            if mag < 10000 then
                local Target = Player.Character or Player.CharacterAdded:Wait()


               -- Script generated by SimpleSpy - credits to exx#9394

local args = {
    [1] = Target.HitPart
}

game:GetService("ReplicatedStorage").HealFire2:FireServer(unpack(args))


            end
        end
    end

end)
C:NewButton("Mass Poison", "Poisons whole map (besides immune)", function()

    -- Script generated by SimpleSpy - credits to exx#9394

local args = {
    [1] = "Feel this poke slowly spread and poison your body.",
    [2] = "All"
}

game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(unpack(args))
    -- Script generated by ClaudiaSpy - credits to ClaudiaHOTM#2452
    local Plr = game.Players.LocalPlayer
    for i, Player in pairs(game.Players:GetPlayers()) do

        if Player.Character ~= nil and Player ~= Plr then
            local mag = (Player.Character.UpperTorso.Position - Plr.Character.UpperTorso.Position).magnitude
            if mag < 10000 then
                local Target = Player.Character or Player.CharacterAdded:Wait()


            -- Script generated by SimpleSpy - credits to exx#9394

local args = {
    [1] = Target.HitPart

}

game:GetService("ReplicatedStorage").PoisonFire:FireServer(unpack(args))


            end
        end
    end

end)
CC:NewButton("Mass Poison (No words)", "Poisons whole map (besides immune)", function()

  
    -- Script generated by ClaudiaSpy - credits to ClaudiaHOTM#2452
    local Plr = game.Players.LocalPlayer
    for i, Player in pairs(game.Players:GetPlayers()) do

        if Player.Character ~= nil and Player ~= Plr then
            local mag = (Player.Character.UpperTorso.Position - Plr.Character.UpperTorso.Position).magnitude
            if mag < 10000 then
                local Target = Player.Character or Player.CharacterAdded:Wait()


            -- Script generated by SimpleSpy - credits to exx#9394

local args = {
    [1] = Target.HitPart

}

game:GetService("ReplicatedStorage").PoisonFire:FireServer(unpack(args))


            end
        end
    end

end)
local K = Custom1:NewSection("Custom Keybinds")
local KK = Custom1:NewSection("Custom Keybinds NO WORDS ")
local KKK = Custom1:NewSection("WILL STILL SAY IF U CLICKED ABOVE")
K:NewButton("Voodoo (q)", "Voodoo person clicked upon", function()

    local function getPlayer()
        local userInput = game:GetService("UserInputService")
        local cam = workspace.CurrentCamera
        local mousePos = userInput:GetMouseLocation()
        local mouseRay = cam:ViewportPointToRay(mousePos.X, mousePos.Y)
        players = {}
        for _, x in next, game:GetService('Players'):GetPlayers() do
            players[#players + 1] = x.Character
        end
        local raycastParams = RaycastParams.new()
        raycastParams.FilterType = Enum.RaycastFilterType.Whitelist
        raycastParams.FilterDescendantsInstances = players
        raycastParams.IgnoreWater = true
        local raycastResult = workspace:Raycast(mouseRay.Origin, mouseRay.Direction * 1000, raycastParams)
        if raycastResult then
            for _, x in next, game:GetService('Players'):GetPlayers() do
                if not raycastResult.Instance:IsDescendantOf(x.Character) then
                    continue
                end
                return x
            end
        end
        return false
    end

    local function Set(list)
        local set = {}
        for _, l in ipairs(list) do
            if l then
                set[l] = true
            end
        end
        return set
    end

    game.Players.LocalPlayer:GetMouse().KeyDown:Connect(function(key)
        if key == "q" then
            local player = getPlayer()
            if player then

                 -- Script generated by SimpleSpy - credits to exx#9394


local args = {
    [1] = player.Character.HitPart
}

game:GetService("ReplicatedStorage").Voodoo:FireServer(unpack(args))


end
end
end)
end)
K:NewButton("Hellfire (z)", "Hellfires person clicked upon", function()

    local function getPlayer()
        local userInput = game:GetService("UserInputService")
        local cam = workspace.CurrentCamera
        local mousePos = userInput:GetMouseLocation()
        local mouseRay = cam:ViewportPointToRay(mousePos.X, mousePos.Y)
        players = {}
        for _, x in next, game:GetService('Players'):GetPlayers() do
            players[#players + 1] = x.Character
        end
        local raycastParams = RaycastParams.new()
        raycastParams.FilterType = Enum.RaycastFilterType.Whitelist
        raycastParams.FilterDescendantsInstances = players
        raycastParams.IgnoreWater = true
        local raycastResult = workspace:Raycast(mouseRay.Origin, mouseRay.Direction * 1000, raycastParams)
        if raycastResult then
            for _, x in next, game:GetService('Players'):GetPlayers() do
                if not raycastResult.Instance:IsDescendantOf(x.Character) then
                    continue
                end
                return x
            end
        end
        return false
    end

    local function Set(list)
        local set = {}
        for _, l in ipairs(list) do
            if l then
                set[l] = true
            end
        end
        return set
    end

    game.Players.LocalPlayer:GetMouse().KeyDown:Connect(function(key)
        if key == "z" then
            local player = getPlayer()
            if player then

                 -- Script generated by SimpleSpy - credits to exx#9394

local args = {
    [1] = "The Dark Lord requests an audience with your disobedient Soul.",
    [2] = "All"
}

game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(unpack(args))

       -- Script generated by SimpleSpy - credits to exx#9394

local args = {
    [1] = player.Character.HitPart
}

game:GetService("ReplicatedStorage").HellFire2:FireServer(unpack(args))


end
end
end)
end)
KKK:NewButton("Hellfire (z) (No words)", "Hellfires person clicked upon", function()

    local function getPlayer()
        local userInput = game:GetService("UserInputService")
        local cam = workspace.CurrentCamera
        local mousePos = userInput:GetMouseLocation()
        local mouseRay = cam:ViewportPointToRay(mousePos.X, mousePos.Y)
        players = {}
        for _, x in next, game:GetService('Players'):GetPlayers() do
            players[#players + 1] = x.Character
        end
        local raycastParams = RaycastParams.new()
        raycastParams.FilterType = Enum.RaycastFilterType.Whitelist
        raycastParams.FilterDescendantsInstances = players
        raycastParams.IgnoreWater = true
        local raycastResult = workspace:Raycast(mouseRay.Origin, mouseRay.Direction * 1000, raycastParams)
        if raycastResult then
            for _, x in next, game:GetService('Players'):GetPlayers() do
                if not raycastResult.Instance:IsDescendantOf(x.Character) then
                    continue
                end
                return x
            end
        end
        return false
    end

    local function Set(list)
        local set = {}
        for _, l in ipairs(list) do
            if l then
                set[l] = true
            end
        end
        return set
    end

    game.Players.LocalPlayer:GetMouse().KeyDown:Connect(function(key)
        if key == "z" then
            local player = getPlayer()
            if player then

                 -- Script generated by SimpleSpy - credits to exx#9394



       -- Script generated by SimpleSpy - credits to exx#9394

local args = {
    [1] = player.Character.HitPart
}

game:GetService("ReplicatedStorage").HellFire2:FireServer(unpack(args))


end
end
end)
end)
K:NewButton("Holy Fire (x)", "Holy fires person clicked upon", function()


    local function getPlayer()
        local userInput = game:GetService("UserInputService")
        local cam = workspace.CurrentCamera
        local mousePos = userInput:GetMouseLocation()
        local mouseRay = cam:ViewportPointToRay(mousePos.X, mousePos.Y)
        players = {}
        for _, x in next, game:GetService('Players'):GetPlayers() do
            players[#players + 1] = x.Character
        end
        local raycastParams = RaycastParams.new()
        raycastParams.FilterType = Enum.RaycastFilterType.Whitelist
        raycastParams.FilterDescendantsInstances = players
        raycastParams.IgnoreWater = true
        local raycastResult = workspace:Raycast(mouseRay.Origin, mouseRay.Direction * 1000, raycastParams)
        if raycastResult then
            for _, x in next, game:GetService('Players'):GetPlayers() do
                if not raycastResult.Instance:IsDescendantOf(x.Character) then
                    continue
                end
                return x
            end
        end
        return false
    end

    local function Set(list)
        local set = {}
        for _, l in ipairs(list) do
            if l then
                set[l] = true
            end
        end
        return set
    end

    game.Players.LocalPlayer:GetMouse().KeyDown:Connect(function(key)
        if key == "x" then
            local player = getPlayer()
            if player then

                -- Script generated by SimpleSpy - credits to exx#9394

local args = {
    [1] = "The Almighty rquests an audience with your soul.",
    [2] = "All"
}

game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(unpack(args))

       -- Script generated by SimpleSpy - credits to exx#9394

local args = {
    [1] = player.Character.HitPart
}

game:GetService("ReplicatedStorage").HellFire3:FireServer(unpack(args))


end
end
end)
end)
KKK:NewButton("Holy Fire (x)(No words)", "Holy fires person clicked upon", function()


    local function getPlayer()
        local userInput = game:GetService("UserInputService")
        local cam = workspace.CurrentCamera
        local mousePos = userInput:GetMouseLocation()
        local mouseRay = cam:ViewportPointToRay(mousePos.X, mousePos.Y)
        players = {}
        for _, x in next, game:GetService('Players'):GetPlayers() do
            players[#players + 1] = x.Character
        end
        local raycastParams = RaycastParams.new()
        raycastParams.FilterType = Enum.RaycastFilterType.Whitelist
        raycastParams.FilterDescendantsInstances = players
        raycastParams.IgnoreWater = true
        local raycastResult = workspace:Raycast(mouseRay.Origin, mouseRay.Direction * 1000, raycastParams)
        if raycastResult then
            for _, x in next, game:GetService('Players'):GetPlayers() do
                if not raycastResult.Instance:IsDescendantOf(x.Character) then
                    continue
                end
                return x
            end
        end
        return false
    end

    local function Set(list)
        local set = {}
        for _, l in ipairs(list) do
            if l then
                set[l] = true
            end
        end
        return set
    end

    game.Players.LocalPlayer:GetMouse().KeyDown:Connect(function(key)
        if key == "x" then
            local player = getPlayer()
            if player then

                -- Script generated by SimpleSpy - credits to exx#9394



       -- Script generated by SimpleSpy - credits to exx#9394

local args = {
    [1] = player.Character.HitPart
}

game:GetService("ReplicatedStorage").HellFire3:FireServer(unpack(args))


end
end
end)
end)
K:NewButton("Ignis (c)", "Ignis person clicked upon", function()

    local function getPlayer()
            local userInput = game:GetService("UserInputService")
            local cam = workspace.CurrentCamera
            local mousePos = userInput:GetMouseLocation()
            local mouseRay = cam:ViewportPointToRay(mousePos.X, mousePos.Y)
            players = {}
            for _, x in next, game:GetService('Players'):GetPlayers() do
                players[#players + 1] = x.Character
            end
            local raycastParams = RaycastParams.new()
            raycastParams.FilterType = Enum.RaycastFilterType.Whitelist
            raycastParams.FilterDescendantsInstances = players
            raycastParams.IgnoreWater = true
            local raycastResult = workspace:Raycast(mouseRay.Origin, mouseRay.Direction * 1000, raycastParams)
            if raycastResult then
                for _, x in next, game:GetService('Players'):GetPlayers() do
                    if not raycastResult.Instance:IsDescendantOf(x.Character) then
                        continue
                    end
                    return x
                end
            end
            return false
        end
    
        local function Set(list)
            local set = {}
            for _, l in ipairs(list) do
                if l then
                    set[l] = true
                end
            end
            return set
        end
    
        game.Players.LocalPlayer:GetMouse().KeyDown:Connect(function(key)
            if key == "c" then
                local player = getPlayer()
                if player then
    
                    -- Script generated by SimpleSpy - credits to exx#9394
    
    local args = {
        [1] = "Make this mortal see, what cannot be, Flames that leap to make them flee.",
        [2] = "All"
    }
    
    game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(unpack(args))
    
            -- Script generated by SimpleSpy - credits to exx#9394
    
    local args = {
        [1] = player.Character.HitPart
    }
    
    game:GetService("ReplicatedStorage").HellFire:FireServer(unpack(args))
    
    end
    end
    end)
    end)
KKK:NewButton("Ignis (c)(No words)", "Ignis person clicked upon", function()

        local function getPlayer()
                local userInput = game:GetService("UserInputService")
                local cam = workspace.CurrentCamera
                local mousePos = userInput:GetMouseLocation()
                local mouseRay = cam:ViewportPointToRay(mousePos.X, mousePos.Y)
                players = {}
                for _, x in next, game:GetService('Players'):GetPlayers() do
                    players[#players + 1] = x.Character
                end
                local raycastParams = RaycastParams.new()
                raycastParams.FilterType = Enum.RaycastFilterType.Whitelist
                raycastParams.FilterDescendantsInstances = players
                raycastParams.IgnoreWater = true
                local raycastResult = workspace:Raycast(mouseRay.Origin, mouseRay.Direction * 1000, raycastParams)
                if raycastResult then
                    for _, x in next, game:GetService('Players'):GetPlayers() do
                        if not raycastResult.Instance:IsDescendantOf(x.Character) then
                            continue
                        end
                        return x
                    end
                end
                return false
            end
        
            local function Set(list)
                local set = {}
                for _, l in ipairs(list) do
                    if l then
                        set[l] = true
                    end
                end
                return set
            end
        
            game.Players.LocalPlayer:GetMouse().KeyDown:Connect(function(key)
                if key == "c" then
                    local player = getPlayer()
                    if player then
        
                        -- Script generated by SimpleSpy - credits to exx#9394
        
        
        
                -- Script generated by SimpleSpy - credits to exx#9394
        
        local args = {
            [1] = player.Character.HitPart
        }
        
        game:GetService("ReplicatedStorage").HellFire:FireServer(unpack(args))
        
        end
        end
        end)
        end)
K:NewButton("SoulFire (v)", "Soul flame person clicked upon", function()

    local function getPlayer()
        local userInput = game:GetService("UserInputService")
        local cam = workspace.CurrentCamera
        local mousePos = userInput:GetMouseLocation()
        local mouseRay = cam:ViewportPointToRay(mousePos.X, mousePos.Y)
        players = {}
        for _, x in next, game:GetService('Players'):GetPlayers() do
            players[#players + 1] = x.Character
        end
        local raycastParams = RaycastParams.new()
        raycastParams.FilterType = Enum.RaycastFilterType.Whitelist
        raycastParams.FilterDescendantsInstances = players
        raycastParams.IgnoreWater = true
        local raycastResult = workspace:Raycast(mouseRay.Origin, mouseRay.Direction * 1000, raycastParams)
        if raycastResult then
            for _, x in next, game:GetService('Players'):GetPlayers() do
                if not raycastResult.Instance:IsDescendantOf(x.Character) then
                    continue
                end
                return x
            end
        end
        return false
    end

    local function Set(list)
        local set = {}
        for _, l in ipairs(list) do
            if l then
                set[l] = true
            end
        end
        return set
    end

    game.Players.LocalPlayer:GetMouse().KeyDown:Connect(function(key)
        if key == "v" then
            local player = getPlayer()
            if player then

                 -- Script generated by SimpleSpy - credits to exx#9394

local args = {
    [1] = "soul flame",
    [2] = "All"
}

game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(unpack(args))

       -- Script generated by SimpleSpy - credits to exx#9394

local args = {
    [1] = player.Character.HitPart
}

game:GetService("ReplicatedStorage").SoulFire:FireServer(unpack(args))


end
end
end)
end)
KKK:NewButton("SoulFire (v)(No words)", "Soul flame person clicked upon", function()

    local function getPlayer()
        local userInput = game:GetService("UserInputService")
        local cam = workspace.CurrentCamera
        local mousePos = userInput:GetMouseLocation()
        local mouseRay = cam:ViewportPointToRay(mousePos.X, mousePos.Y)
        players = {}
        for _, x in next, game:GetService('Players'):GetPlayers() do
            players[#players + 1] = x.Character
        end
        local raycastParams = RaycastParams.new()
        raycastParams.FilterType = Enum.RaycastFilterType.Whitelist
        raycastParams.FilterDescendantsInstances = players
        raycastParams.IgnoreWater = true
        local raycastResult = workspace:Raycast(mouseRay.Origin, mouseRay.Direction * 1000, raycastParams)
        if raycastResult then
            for _, x in next, game:GetService('Players'):GetPlayers() do
                if not raycastResult.Instance:IsDescendantOf(x.Character) then
                    continue
                end
                return x
            end
        end
        return false
    end

    local function Set(list)
        local set = {}
        for _, l in ipairs(list) do
            if l then
                set[l] = true
            end
        end
        return set
    end

    game.Players.LocalPlayer:GetMouse().KeyDown:Connect(function(key)
        if key == "v" then
            local player = getPlayer()
            if player then

                 -- Script generated by SimpleSpy - credits to exx#9394



       -- Script generated by SimpleSpy - credits to exx#9394

local args = {
    [1] = player.Character.HitPart
}

game:GetService("ReplicatedStorage").SoulFire:FireServer(unpack(args))


end
end
end)
end)
K:NewButton("Freeze (b)", "Freezes person clicked upon", function()

    local function getPlayer()
        local userInput = game:GetService("UserInputService")
        local cam = workspace.CurrentCamera
        local mousePos = userInput:GetMouseLocation()
        local mouseRay = cam:ViewportPointToRay(mousePos.X, mousePos.Y)
        players = {}
        for _, x in next, game:GetService('Players'):GetPlayers() do
            players[#players + 1] = x.Character
        end
        local raycastParams = RaycastParams.new()
        raycastParams.FilterType = Enum.RaycastFilterType.Whitelist
        raycastParams.FilterDescendantsInstances = players
        raycastParams.IgnoreWater = true
        local raycastResult = workspace:Raycast(mouseRay.Origin, mouseRay.Direction * 1000, raycastParams)
        if raycastResult then
            for _, x in next, game:GetService('Players'):GetPlayers() do
                if not raycastResult.Instance:IsDescendantOf(x.Character) then
                    continue
                end
                return x
            end
        end
        return false
    end

    local function Set(list)
        local set = {}
        for _, l in ipairs(list) do
            if l then
                set[l] = true
            end
        end
        return set
    end

    game.Players.LocalPlayer:GetMouse().KeyDown:Connect(function(key)
        if key == "b" then
            local player = getPlayer()
            if player then

                 -- Script generated by SimpleSpy - credits to exx#9394

local args = {
    [1] = "Let this bij, quick as a sneeze. Stop this snit, and quickly freeze.",
    [2] = "All"
}

game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(unpack(args))


       -- Script generated by SimpleSpy - credits to exx#9394

local args = {
    [1] = player.Character.HitPart
}

game:GetService("ReplicatedStorage").FreezeFire:FireServer(unpack(args))


end
end
end)
end)
KKK:NewButton("Freeze (b)(No words)", "Freezes person clicked upon", function()

    local function getPlayer()
        local userInput = game:GetService("UserInputService")
        local cam = workspace.CurrentCamera
        local mousePos = userInput:GetMouseLocation()
        local mouseRay = cam:ViewportPointToRay(mousePos.X, mousePos.Y)
        players = {}
        for _, x in next, game:GetService('Players'):GetPlayers() do
            players[#players + 1] = x.Character
        end
        local raycastParams = RaycastParams.new()
        raycastParams.FilterType = Enum.RaycastFilterType.Whitelist
        raycastParams.FilterDescendantsInstances = players
        raycastParams.IgnoreWater = true
        local raycastResult = workspace:Raycast(mouseRay.Origin, mouseRay.Direction * 1000, raycastParams)
        if raycastResult then
            for _, x in next, game:GetService('Players'):GetPlayers() do
                if not raycastResult.Instance:IsDescendantOf(x.Character) then
                    continue
                end
                return x
            end
        end
        return false
    end

    local function Set(list)
        local set = {}
        for _, l in ipairs(list) do
            if l then
                set[l] = true
            end
        end
        return set
    end

    game.Players.LocalPlayer:GetMouse().KeyDown:Connect(function(key)
        if key == "b" then
            local player = getPlayer()
            if player then

                 -- Script generated by SimpleSpy - credits to exx#9394

local args = {
    [1] = "Let this bij, quick as a sneeze. Stop this snit, and quickly freeze.",
    [2] = "All"
}

game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(unpack(args))


       -- Script generated by SimpleSpy - credits to exx#9394

local args = {
    [1] = player.Character.HitPart
}

game:GetService("ReplicatedStorage").FreezeFire:FireServer(unpack(args))


end
end
end)
end)
K:NewButton("Vine Trap (n)", "Vine traps person clicked upon", function()


    local function getPlayer()
        local userInput = game:GetService("UserInputService")
        local cam = workspace.CurrentCamera
        local mousePos = userInput:GetMouseLocation()
        local mouseRay = cam:ViewportPointToRay(mousePos.X, mousePos.Y)
        players = {}
        for _, x in next, game:GetService('Players'):GetPlayers() do
            players[#players + 1] = x.Character
        end
        local raycastParams = RaycastParams.new()
        raycastParams.FilterType = Enum.RaycastFilterType.Whitelist
        raycastParams.FilterDescendantsInstances = players
        raycastParams.IgnoreWater = true
        local raycastResult = workspace:Raycast(mouseRay.Origin, mouseRay.Direction * 1000, raycastParams)
        if raycastResult then
            for _, x in next, game:GetService('Players'):GetPlayers() do
                if not raycastResult.Instance:IsDescendantOf(x.Character) then
                    continue
                end
                return x
            end
        end
        return false
    end

    local function Set(list)
        local set = {}
        for _, l in ipairs(list) do
            if l then
                set[l] = true
            end
        end
        return set
    end

    game.Players.LocalPlayer:GetMouse().KeyDown:Connect(function(key)
        if key == "n" then
            local player = getPlayer()
            if player then

                 -- Script generated by SimpleSpy - credits to exx#9394

local args = {
    [1] = "Nature will contain you.",
    [2] = "All"
}

game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(unpack(args))

       -- Script generated by SimpleSpy - credits to exx#9394

local args = {
    [1] = player.Character.HitPart
}

game:GetService("ReplicatedStorage").VineTrap:FireServer(unpack(args))


end
end
end)
end)
KKK:NewButton("Vine Trap (n)(No words)", "Vine traps person clicked upon", function()


    local function getPlayer()
        local userInput = game:GetService("UserInputService")
        local cam = workspace.CurrentCamera
        local mousePos = userInput:GetMouseLocation()
        local mouseRay = cam:ViewportPointToRay(mousePos.X, mousePos.Y)
        players = {}
        for _, x in next, game:GetService('Players'):GetPlayers() do
            players[#players + 1] = x.Character
        end
        local raycastParams = RaycastParams.new()
        raycastParams.FilterType = Enum.RaycastFilterType.Whitelist
        raycastParams.FilterDescendantsInstances = players
        raycastParams.IgnoreWater = true
        local raycastResult = workspace:Raycast(mouseRay.Origin, mouseRay.Direction * 1000, raycastParams)
        if raycastResult then
            for _, x in next, game:GetService('Players'):GetPlayers() do
                if not raycastResult.Instance:IsDescendantOf(x.Character) then
                    continue
                end
                return x
            end
        end
        return false
    end

    local function Set(list)
        local set = {}
        for _, l in ipairs(list) do
            if l then
                set[l] = true
            end
        end
        return set
    end

    game.Players.LocalPlayer:GetMouse().KeyDown:Connect(function(key)
        if key == "n" then
            local player = getPlayer()
            if player then

                 -- Script generated by SimpleSpy - credits to exx#9394

local args = {
    [1] = "Nature will contain you.",
    [2] = "All"
}

game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(unpack(args))

       -- Script generated by SimpleSpy - credits to exx#9394

local args = {
    [1] = player.Character.HitPart
}

game:GetService("ReplicatedStorage").VineTrap:FireServer(unpack(args))


end
end
end)
end)
K:NewButton("Holy Heal (m)", "Heals person clicked upon", function()

    local function getPlayer()
        local userInput = game:GetService("UserInputService")
        local cam = workspace.CurrentCamera
        local mousePos = userInput:GetMouseLocation()
        local mouseRay = cam:ViewportPointToRay(mousePos.X, mousePos.Y)
        players = {}
        for _, x in next, game:GetService('Players'):GetPlayers() do
            players[#players + 1] = x.Character
        end
        local raycastParams = RaycastParams.new()
        raycastParams.FilterType = Enum.RaycastFilterType.Whitelist
        raycastParams.FilterDescendantsInstances = players
        raycastParams.IgnoreWater = true
        local raycastResult = workspace:Raycast(mouseRay.Origin, mouseRay.Direction * 1000, raycastParams)
        if raycastResult then
            for _, x in next, game:GetService('Players'):GetPlayers() do
                if not raycastResult.Instance:IsDescendantOf(x.Character) then
                    continue
                end
                return x
            end
        end
        return false
    end

    local function Set(list)
        local set = {}
        for _, l in ipairs(list) do
            if l then
                set[l] = true
            end
        end
        return set
    end

    game.Players.LocalPlayer:GetMouse().KeyDown:Connect(function(key)
        if key == "m" then
            local player = getPlayer()
            if player then

                  -- Script generated by SimpleSpy - credits to exx#9394

local args = {
    [1] = " Heal their body, and Heal their heart, return their health from the start.",
    [2] = "All"
}

game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(unpack(args))


       -- Script generated by SimpleSpy - credits to exx#9394

local args = {
    [1] = player.Character.HitPart
}

game:GetService("ReplicatedStorage").HealFire2:FireServer(unpack(args))

end
end
end)
end)
KKK:NewButton("Holy Heal (m)(No words)", "Heals person clicked upon", function()

    local function getPlayer()
        local userInput = game:GetService("UserInputService")
        local cam = workspace.CurrentCamera
        local mousePos = userInput:GetMouseLocation()
        local mouseRay = cam:ViewportPointToRay(mousePos.X, mousePos.Y)
        players = {}
        for _, x in next, game:GetService('Players'):GetPlayers() do
            players[#players + 1] = x.Character
        end
        local raycastParams = RaycastParams.new()
        raycastParams.FilterType = Enum.RaycastFilterType.Whitelist
        raycastParams.FilterDescendantsInstances = players
        raycastParams.IgnoreWater = true
        local raycastResult = workspace:Raycast(mouseRay.Origin, mouseRay.Direction * 1000, raycastParams)
        if raycastResult then
            for _, x in next, game:GetService('Players'):GetPlayers() do
                if not raycastResult.Instance:IsDescendantOf(x.Character) then
                    continue
                end
                return x
            end
        end
        return false
    end

    local function Set(list)
        local set = {}
        for _, l in ipairs(list) do
            if l then
                set[l] = true
            end
        end
        return set
    end

    game.Players.LocalPlayer:GetMouse().KeyDown:Connect(function(key)
        if key == "m" then
            local player = getPlayer()
            if player then

                  -- Script generated by SimpleSpy - credits to exx#9394




       -- Script generated by SimpleSpy - credits to exx#9394

local args = {
    [1] = player.Character.HitPart
}

game:GetService("ReplicatedStorage").HealFire2:FireServer(unpack(args))

end
end
end)
end)
K:NewButton("Poison (L) ", "Poisons person clicked upon", function()

    local function getPlayer()
        local userInput = game:GetService("UserInputService")
        local cam = workspace.CurrentCamera
        local mousePos = userInput:GetMouseLocation()
        local mouseRay = cam:ViewportPointToRay(mousePos.X, mousePos.Y)
        players = {}
        for _, x in next, game:GetService('Players'):GetPlayers() do
            players[#players + 1] = x.Character
        end
        local raycastParams = RaycastParams.new()
        raycastParams.FilterType = Enum.RaycastFilterType.Whitelist
        raycastParams.FilterDescendantsInstances = players
        raycastParams.IgnoreWater = true
        local raycastResult = workspace:Raycast(mouseRay.Origin, mouseRay.Direction * 1000, raycastParams)
        if raycastResult then
            for _, x in next, game:GetService('Players'):GetPlayers() do
                if not raycastResult.Instance:IsDescendantOf(x.Character) then
                    continue
                end
                return x
            end
        end
        return false
    end

    local function Set(list)
        local set = {}
        for _, l in ipairs(list) do
            if l then
                set[l] = true
            end
        end
        return set
    end

    game.Players.LocalPlayer:GetMouse().KeyDown:Connect(function(key)
        if key == "l" then
            local player = getPlayer()
            if player then

                
    -- Script generated by SimpleSpy - credits to exx#9394

local args = {
    [1] = "With a poke I posion your soul and body.",
    [2] = "All"
}

game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(unpack(args))

       -- Script generated by SimpleSpy - credits to exx#9394

local args = {
    [1] = player.Character.HitPart
}

game:GetService("ReplicatedStorage").PoisonFire:FireServer(unpack(args))

end
end
end)
end)
KKK:NewButton("Poison (L)(No words)", "Poisons person clicked upon", function()

    local function getPlayer()
        local userInput = game:GetService("UserInputService")
        local cam = workspace.CurrentCamera
        local mousePos = userInput:GetMouseLocation()
        local mouseRay = cam:ViewportPointToRay(mousePos.X, mousePos.Y)
        players = {}
        for _, x in next, game:GetService('Players'):GetPlayers() do
            players[#players + 1] = x.Character
        end
        local raycastParams = RaycastParams.new()
        raycastParams.FilterType = Enum.RaycastFilterType.Whitelist
        raycastParams.FilterDescendantsInstances = players
        raycastParams.IgnoreWater = true
        local raycastResult = workspace:Raycast(mouseRay.Origin, mouseRay.Direction * 1000, raycastParams)
        if raycastResult then
            for _, x in next, game:GetService('Players'):GetPlayers() do
                if not raycastResult.Instance:IsDescendantOf(x.Character) then
                    continue
                end
                return x
            end
        end
        return false
    end

    local function Set(list)
        local set = {}
        for _, l in ipairs(list) do
            if l then
                set[l] = true
            end
        end
        return set
    end

    game.Players.LocalPlayer:GetMouse().KeyDown:Connect(function(key)
        if key == "l" then
            local player = getPlayer()
            if player then

                
    -- Script generated by SimpleSpy - credits to exx#9394



       -- Script generated by SimpleSpy - credits to exx#9394

local args = {
    [1] = player.Character.HitPart
}

game:GetService("ReplicatedStorage").PoisonFire:FireServer(unpack(args))

end
end
end)
end)
local P = Custom2:NewSection("Personal Attacks")
P:NewTextBox("Hellfire Someone", "Hellfire person whos name was put in", function(txt)
    local Players = game:GetService("Players")
    local msg = txt
    local function findPlayer(stringg)
        for _, v in pairs(Players:GetPlayers()) do
            if stringg:lower() == (v.Name:lower()):sub(1, #stringg) then
                return v
            end
        end
    end

    local player = findPlayer(msg)
    local CHAR = player.Character

    -- Script generated by SimpleSpy - credits to exx#9394

local args = {
    [1] = player.Character.HitPart
}

game:GetService("ReplicatedStorage").HellFire2:FireServer(unpack(args))
end)
P:NewTextBox("Holy Fire Someone", "Holy fire person whos name was put in", function(txt)
    local Players = game:GetService("Players")
    local msg = txt
    local function findPlayer(stringg)
        for _, v in pairs(Players:GetPlayers()) do
            if stringg:lower() == (v.Name:lower()):sub(1, #stringg) then
                return v
            end
        end
    end

    local player = findPlayer(msg)
    local CHAR = player.Character

       -- Script generated by SimpleSpy - credits to exx#9394

local args = {
    [1] = player.Character.HitPart
}

game:GetService("ReplicatedStorage"):WaitForChild("HellFire3"):FireServer(unpack(args))
end)
P:NewTextBox("Holy Heal Someone", "holy heal person whos name was put in", function(txt)
    local Players = game:GetService("Players")
    local msg = txt
    local function findPlayer(stringg)
        for _, v in pairs(Players:GetPlayers()) do
            if stringg:lower() == (v.Name:lower()):sub(1, #stringg) then
                return v
            end
        end
    end

    local player = findPlayer(msg)
    local CHAR = player.Character

    -- Script generated by SimpleSpy - credits to exx#9394

local args = {
    [1] = player.Character.HitPart
}

game:GetService("ReplicatedStorage").HealFire2:FireServer(unpack(args))
end)
P:NewTextBox("Ignis Someone", "Ignis person whos name was put in", function(txt)
    local Players = game:GetService("Players")
    local msg = txt
    local function findPlayer(stringg)
        for _, v in pairs(Players:GetPlayers()) do
            if stringg:lower() == (v.Name:lower()):sub(1, #stringg) then
                return v
            end
        end
    end

    local player = findPlayer(msg)
    local CHAR = player.Character

       -- Script generated by SimpleSpy - credits to exx#9394

local args = {
    [1] = player.Character.HitPart
}

game:GetService("ReplicatedStorage"):WaitForChild("HellFire"):FireServer(unpack(args))
end)
P:NewTextBox("Vine Trap Someone", "Vine trap person whos name was put in", function(txt)
    local Players = game:GetService("Players")
    local msg = txt
    local function findPlayer(stringg)
        for _, v in pairs(Players:GetPlayers()) do
            if stringg:lower() == (v.Name:lower()):sub(1, #stringg) then
                return v
            end
        end
    end

    local player = findPlayer(msg)
    local CHAR = player.Character

       -- Script generated by SimpleSpy - credits to exx#9394

local args = {
    [1] = player.Character.HitPart
}

game:GetService("ReplicatedStorage"):WaitForChild("VineTrap"):FireServer(unpack(args))
end)
P:NewTextBox("Posion Someone", "Poison person whos name was put in", function(txt)
    local Players = game:GetService("Players")
    local msg = txt
    local function findPlayer(stringg)
        for _, v in pairs(Players:GetPlayers()) do
            if stringg:lower() == (v.Name:lower()):sub(1, #stringg) then
                return v
            end
        end
    end

    local player = findPlayer(msg)
    local CHAR = player.Character

       -- Script generated by SimpleSpy - credits to exx#9394

local args = {
    [1] = player.Character.HitPart
}

game:GetService("ReplicatedStorage"):WaitForChild("PoisonFire"):FireServer(unpack(args))
end)
P:NewTextBox("Soulflame Someone", "Soulfire person whos name was put in", function(txt)
    local Players = game:GetService("Players")
    local msg = txt
    local function findPlayer(stringg)
        for _, v in pairs(Players:GetPlayers()) do
            if stringg:lower() == (v.Name:lower()):sub(1, #stringg) then
                return v
            end
        end
    end

    local player = findPlayer(msg)
    local CHAR = player.Character

       -- Script generated by SimpleSpy - credits to exx#9394

local args = {
    [1] = player.Character.HitPart
}

game:GetService("ReplicatedStorage"):WaitForChild("SoulFire"):FireServer(unpack(args))

end)
P:NewTextBox("Voodoo Someone", "Voodoo person whos name was put in", function(txt)
    local Players = game:GetService("Players")
    local msg = txt
    local function findPlayer(stringg)
        for _, v in pairs(Players:GetPlayers()) do
            if stringg:lower() == (v.Name:lower()):sub(1, #stringg) then
                return v
            end
        end
    end

    local player = findPlayer(msg)
    local CHAR = player.Character

       -- Script generated by SimpleSpy - credits to exx#9394

local args = {
    [1] = player.Character.HitPart
}

game:GetService("ReplicatedStorage").Voodoo:FireServer(unpack(args))
end)
local U = Custom3:NewSection("Self Spells")
U:NewButton("Self Immortality", "Make self immortal with soulflame", function()
    local args = {
        [1] = game:GetService("Players")["LocalPlayer"].Character.HitPart
        
    }
    
    game:GetService("ReplicatedStorage"):WaitForChild("SoulFire"):FireServer(unpack(args))
    wait(.75)
    local args = {
        [1] = game:GetService("Players")["LocalPlayer"].Character.HitPart
        
    }
    
    game:GetService("ReplicatedStorage"):WaitForChild("SoulFire"):FireServer(unpack(args))
    wait(.75)
    local args = {
        [1] = game:GetService("Players")["LocalPlayer"].Character.HitPart
        
    }
    
    game:GetService("ReplicatedStorage"):WaitForChild("SoulFire"):FireServer(unpack(args))
    wait(.75)
    local args = {
        [1] = game:GetService("Players")["LocalPlayer"].Character.HitPart
        
    }
    
    game:GetService("ReplicatedStorage"):WaitForChild("SoulFire"):FireServer(unpack(args))
    wait(.75)
    local args = {
        [1] = game:GetService("Players")["LocalPlayer"].Character.HitPart
        
    }
    
    game:GetService("ReplicatedStorage"):WaitForChild("SoulFire"):FireServer(unpack(args))
    wait(.75)
    local args = {
        [1] = game:GetService("Players")["LocalPlayer"].Character.HitPart
        
    }
    
    game:GetService("ReplicatedStorage"):WaitForChild("SoulFire"):FireServer(unpack(args))
    wait(.75)
    local args = {
        [1] = game:GetService("Players")["LocalPlayer"].Character.HitPart
        
    }
    
    game:GetService("ReplicatedStorage"):WaitForChild("SoulFire"):FireServer(unpack(args))
    wait(.75)
    local args = {
        [1] = game:GetService("Players")["LocalPlayer"].Character.HitPart
        
    }
    
    game:GetService("ReplicatedStorage"):WaitForChild("SoulFire"):FireServer(unpack(args))
    wait(.75)
    local args = {
        [1] = game:GetService("Players")["LocalPlayer"].Character.HitPart
        
    }
    
    game:GetService("ReplicatedStorage"):WaitForChild("SoulFire"):FireServer(unpack(args))
    wait(.75)
    local args = {
        [1] = game:GetService("Players")["LocalPlayer"].Character.HitPart
        
    }
    
    game:GetService("ReplicatedStorage"):WaitForChild("SoulFire"):FireServer(unpack(args))
    wait(.75)
    local args = {
        [1] = game:GetService("Players")["LocalPlayer"].Character.HitPart
        
    }
    
    game:GetService("ReplicatedStorage"):WaitForChild("SoulFire"):FireServer(unpack(args))
    wait(.75)
    local args = {
        [1] = game:GetService("Players")["LocalPlayer"].Character.HitPart
        
    }
    
    game:GetService("ReplicatedStorage"):WaitForChild("SoulFire"):FireServer(unpack(args))
    wait(.75)
    local args = {
        [1] = game:GetService("Players")["LocalPlayer"].Character.HitPart
        
    }
    
    game:GetService("ReplicatedStorage"):WaitForChild("SoulFire"):FireServer(unpack(args))
    wait(.75)
    local args = {
        [1] = game:GetService("Players")["LocalPlayer"].Character.HitPart
        
    }
    
    game:GetService("ReplicatedStorage"):WaitForChild("SoulFire"):FireServer(unpack(args))
    wait(.75)
    local args = {
        [1] = game:GetService("Players")["LocalPlayer"].Character.HitPart
        
    }
    
    game:GetService("ReplicatedStorage"):WaitForChild("SoulFire"):FireServer(unpack(args))
    wait(.75)
    local args = {
        [1] = game:GetService("Players")["LocalPlayer"].Character.HitPart
        
    }
    
    game:GetService("ReplicatedStorage"):WaitForChild("SoulFire"):FireServer(unpack(args))
    wait(.75)
    local args = {
        [1] = game:GetService("Players")["LocalPlayer"].Character.HitPart
        
    }
    
    game:GetService("ReplicatedStorage"):WaitForChild("SoulFire"):FireServer(unpack(args))
    wait(.75)
    local args = {
        [1] = game:GetService("Players")["LocalPlayer"].Character.HitPart
        
    }
    
    game:GetService("ReplicatedStorage"):WaitForChild("SoulFire"):FireServer(unpack(args))
    wait(.75)
    local args = {
        [1] = game:GetService("Players")["LocalPlayer"].Character.HitPart
        
    }
    
    game:GetService("ReplicatedStorage"):WaitForChild("SoulFire"):FireServer(unpack(args))
    wait(.75)
    local args = {
        [1] = game:GetService("Players")["LocalPlayer"].Character.HitPart
        
    }
    
    game:GetService("ReplicatedStorage"):WaitForChild("SoulFire"):FireServer(unpack(args))
    wait(.75)
    local args = {
        [1] = game:GetService("Players")["LocalPlayer"].Character.HitPart
        
    }
    
    game:GetService("ReplicatedStorage"):WaitForChild("SoulFire"):FireServer(unpack(args))
    wait(.75)
    local args = {
        [1] = game:GetService("Players")["LocalPlayer"].Character.HitPart
        
    }
    
    game:GetService("ReplicatedStorage"):WaitForChild("SoulFire"):FireServer(unpack(args))
    wait(.75)
    local args = {
        [1] = game:GetService("Players")["LocalPlayer"].Character.HitPart
        
    }
    
    game:GetService("ReplicatedStorage"):WaitForChild("SoulFire"):FireServer(unpack(args))
    wait(.75)
    local args = {
        [1] = game:GetService("Players")["LocalPlayer"].Character.HitPart
        
    }
    
    game:GetService("ReplicatedStorage"):WaitForChild("SoulFire"):FireServer(unpack(args))
    wait(.75)
    local args = {
        [1] = game:GetService("Players")["LocalPlayer"].Character.HitPart
        
    }
    
    game:GetService("ReplicatedStorage"):WaitForChild("SoulFire"):FireServer(unpack(args))
    wait(.75)
    local args = {
        [1] = game:GetService("Players")["LocalPlayer"].Character.HitPart
        
    }
    
    game:GetService("ReplicatedStorage"):WaitForChild("SoulFire"):FireServer(unpack(args))
    wait(.75)
end)
U:NewButton("Self Vine Trap", "Traps self in vines", function()
    
    local args = {
        [1] = game:GetService("Players")["LocalPlayer"].Character.HitPart
    }
    
    game:GetService("ReplicatedStorage"):WaitForChild("VineTrap"):FireServer(unpack(args))
end)
U:NewButton("Self Soulflame", "Soulflame self making it look real & undectable", function()
    local args = {
        [1] = game:GetService("Players")["LocalPlayer"].Character.HitPart
    }
    
    game:GetService("ReplicatedStorage").SoulFire:FireServer(unpack(args))
end)
U:NewButton("Self Freeze", "Freezes Self", function()
    local args = {
        [1] = game:GetService("Players")["LocalPlayer"].Character.HitPart
    }
    
    game:GetService("ReplicatedStorage").FreezeFire:FireServer(unpack(args))
end)
U:NewButton("Self Holy Heal", "Heal Self", function()
    local args = {
        [1] = game:GetService("Players")["LocalPlayer"].Character.HitPart
    }
    
    game:GetService("ReplicatedStorage").HealFire2:FireServer(unpack(args))
end)
local M = Misc:NewSection("Others")
M:NewButton("sacrificedmortality's Script", "Opens Script", function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/testscriptss/magic-v.2-script/main/ate.lua"))();
end)
M:NewButton("Infinite Yeild", "Infinite Yeild", function()
    loadstring(game:HttpGet('https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source'))()
end)
M:NewButton("Simple Spy", "Remote Spy", function()
    loadstring(game:HttpGet("https://github.com/exxtremestuffs/SimpleSpySource/raw/master/SimpleSpy.lua"))()

end)
M:NewButton("Chat Spy", "Chat Spy", function()
    enabled = true --chat "/spy" to toggle!
spyOnMyself = false --if true will check your messages too
public = false --if true will chat the logs publicly (fun, risky)
publicItalics = true --if true will use /me to stand out
privateProperties = { --customize private logs
    Color = Color3.fromRGB(0,255,255); 
    Font = Enum.Font.SourceSansBold;
    TextSize = 18;
}
 
 
local StarterGui = game:GetService("StarterGui")
local Players = game:GetService("Players")
local player = Players.LocalPlayer or Players:GetPropertyChangedSignal("LocalPlayer"):Wait() or Players.LocalPlayer
local saymsg = game:GetService("ReplicatedStorage"):WaitForChild("DefaultChatSystemChatEvents"):WaitForChild("SayMessageRequest")
local getmsg = game:GetService("ReplicatedStorage"):WaitForChild("DefaultChatSystemChatEvents"):WaitForChild("OnMessageDoneFiltering")
local instance = (_G.chatSpyInstance or 0) + 1
_G.chatSpyInstance = instance
 
local function onChatted(p,msg)
    if _G.chatSpyInstance == instance then
        if p==player and msg:lower():sub(1,4)=="/spy" then
            enabled = not enabled
            wait(0.3)
            privateProperties.Text = "{SPY "..(enabled and "EN" or "DIS").."ABLED}"
            StarterGui:SetCore("ChatMakeSystemMessage",privateProperties)
        elseif enabled and (spyOnMyself==true or p~=player) then
            msg = msg:gsub("[\n\r]",''):gsub("\t",' '):gsub("[ ]+",' ')
            local hidden = true
            local conn = getmsg.OnClientEvent:Connect(function(packet,channel)
                if packet.SpeakerUserId==p.UserId and packet.Message==msg:sub(#msg-#packet.Message+1) and (channel=="All" or (channel=="Team" and public==false and Players[packet.FromSpeaker].Team==player.Team)) then
                    hidden = false
                end
            end)
            wait(1)
            conn:Disconnect()
            if hidden and enabled then
                if public then
                    saymsg:FireServer((publicItalics and "/me " or '').."{SPY} [".. p.Name .."]: "..msg,"All")
                else
                    privateProperties.Text = "{SPY} [".. p.Name .."]: "..msg
                    StarterGui:SetCore("ChatMakeSystemMessage",privateProperties)
                end
            end
        end
    end
end
 
for _,p in ipairs(Players:GetPlayers()) do
    p.Chatted:Connect(function(msg) onChatted(p,msg) end)
end
Players.PlayerAdded:Connect(function(p)
    p.Chatted:Connect(function(msg) onChatted(p,msg) end)
end)
privateProperties.Text = "{SPY "..(enabled and "EN" or "DIS").."ABLED}"
StarterGui:SetCore("ChatMakeSystemMessage",privateProperties)
if not player.PlayerGui:FindFirstChild("Chat") then wait(3) end
local chatFrame = player.PlayerGui.Chat.Frame
chatFrame.ChatChannelParentFrame.Visible = true
chatFrame.ChatBarParentFrame.Position = chatFrame.ChatChannelParentFrame.Position+UDim2.new(UDim.new(),chatFrame.ChatChannelParentFrame.Size.Y)

end)
local b = Other:NewSection("Claim Badges")
b:NewButton("Magic Scroll", "Give Badge", function()
    game:GetService("ReplicatedStorage"):WaitForChild("MagicScrollBadge"):FireServer()
end)
b:NewButton("Magic Candle", "Give Badge", function()
    game:GetService("ReplicatedStorage"):WaitForChild("MCandleBadge"):FireServer()
end)
b:NewButton("Dimensional Shards", "Give Badge", function()
    game:GetService("ReplicatedStorage"):WaitForChild("ShardBadge"):FireServer()
end)
b:NewButton("Anglic Scroll", "Give Badge", function()
    game:GetService("ReplicatedStorage"):WaitForChild("AngelicScrollBadge"):FireServer()
end)
b:NewButton("Nature Scroll", "Give Badge", function()
    game:GetService("ReplicatedStorage"):WaitForChild("NatureScrollBadge"):FireServer()
end)
b:NewButton("Rejuvenating", "ButtonInfo", function()
    game:GetService("ReplicatedStorage"):WaitForChild("Rejuvenating"):FireServer()
end)
CCC:NewKeybind("Mass Hellfire", "Hellfires whole map (besides immune)", Enum.KeyCode.KeypadSeven, function()

        -- Script generated by ClaudiaSpy - credits to ClaudiaHOTM#2452
        local Plr = game.Players.LocalPlayer
        for i, Player in pairs(game.Players:GetPlayers()) do
    
            if Player.Character ~= nil and Player ~= Plr then
                local mag = (Player.Character.UpperTorso.Position - Plr.Character.UpperTorso.Position).magnitude
                if mag < 10000 then
                    local Target = Player.Character or Player.CharacterAdded:Wait()
    
     -- Script generated by SimpleSpy - credits to exx#9394
    
     local args = {
        [1] = Target.HitPart
    }
    
    game:GetService("ReplicatedStorage").HellFire2:FireServer(unpack(args))
    
                end
            end
        end
    
    end)
    CC:NewButton("Mass Hellfire (No words)", "Hellfires whole map (besides immune)", function()
    
        -- Script generated by SimpleSpy - credits to exx#9394
    

        -- Script generated by ClaudiaSpy - credits to ClaudiaHOTM#2452
        local Plr = game.Players.LocalPlayer
        for i, Player in pairs(game.Players:GetPlayers()) do
    
            if Player.Character ~= nil and Player ~= Plr then
                local mag = (Player.Character.UpperTorso.Position - Plr.Character.UpperTorso.Position).magnitude
                if mag < 10000 then
                    local Target = Player.Character or Player.CharacterAdded:Wait()
    
     -- Script generated by SimpleSpy - credits to exx#9394
    
     local args = {
        [1] = Target.HitPart
    }
    
    game:GetService("ReplicatedStorage").HellFire2:FireServer(unpack(args))
    
                end
            end
        end
    
end)
CCC:NewKeybind("Mass Soulfire", "Soulfires whole map (besides immune)", Enum.KeyCode.KeypadEight, function()

    
        -- Script generated by ClaudiaSpy - credits to ClaudiaHOTM#2452
        local Plr = game.Players.LocalPlayer
        for i, Player in pairs(game.Players:GetPlayers()) do
    
            if Player.Character ~= nil and Player ~= Plr then
                local mag = (Player.Character.UpperTorso.Position - Plr.Character.UpperTorso.Position).magnitude
                if mag < 10000 then
                    local Target = Player.Character or Player.CharacterAdded:Wait()
    
    
                   -- Script generated by SimpleSpy - credits to exx#9394
    
    local args = {
        [1] = Target.HitPart
    }
    
    game:GetService("ReplicatedStorage").SoulFire:FireServer(unpack(args))
    
    
                end
            end
        end
    

end)
CCC:NewKeybind("Mass Holyfire", "Holyfires whole map (besides immune)", Enum.KeyCode.KeypadNine, function()

    
        -- Script generated by ClaudiaSpy - credits to ClaudiaHOTM#2452
        local Plr = game.Players.LocalPlayer
        for i, Player in pairs(game.Players:GetPlayers()) do
    
            if Player.Character ~= nil and Player ~= Plr then
                local mag = (Player.Character.UpperTorso.Position - Plr.Character.UpperTorso.Position).magnitude
                if mag < 10000 then
                    local Target = Player.Character or Player.CharacterAdded:Wait()
    
    
                  -- Script generated by SimpleSpy - credits to exx#9394
    
    local args = {
        [1] = Target.HitPart
    }
    
    game:GetService("ReplicatedStorage").HellFire3:FireServer(unpack(args))
    
    
    
                end
            end
        end
    
end)
-- GUI CLOSING/OPPENING
local G = Misc:NewSection("Gui")
G:NewKeybind("Toggle Gui",
"",
Enum.KeyCode.RightShift,
function()
    Library:ToggleUI()
end
)
